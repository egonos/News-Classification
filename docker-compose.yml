version: '3.7'

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data 


  mlflow_server:
    image: python:3.10
    container_name: mlflow_server
    working_dir: /mlflow_server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
    command: >
      bash -c "
      pip install mlflow &&
      mlflow ui --host 0.0.0.0 --port 5000
      "
    restart: always 

    

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:sentiment
    container_name: airflow_webserver
    depends_on:
      - postgres
      - mlflow_server 

    volumes:
    - ./dags:/opt/airflow/dags

    ports:
      - "8080:8080"
    deploy: {}
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: somethingsecret
    command: >
      bash -c "
        airflow db init && 
        airflow users create --username egemen --password egemen --firstname Egemen --lastname User --role Admin --email egedalgic@gmail.com &&
        airflow webserver
      "


  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:sentiment_scheduler
    container_name: airflow_scheduler
    depends_on:
      - airflow-webserver
      - mlflow_server
    deploy: {}
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: somethingsecret
    volumes:
      - ./dags:/opt/airflow/dags
    
    command: >
      bash -c "
        sleep 10 &&
        airflow db init &&
        airflow scheduler
      "

    
volumes:
  postgres-db-volume: